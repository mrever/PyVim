set nocompatible
 
set history=999                 " keep 999 lines of command line history
set ruler                               " show the cursor position all the time
set showcmd                     " display incomplete commands
set incsearch                      " do incremental searching
set lines=52 columns=217
set nobackup
set noswapfile
set noundofile
set path+=**
set wildmenu
set autoindent
set hlsearch
set backspace=indent,eol,start
set nu
set guifont=Consolas:h10
set encoding=utf-8
set ff=unix
set ffs=unix,dos
set complete-=i
set hidden
syntax on
 
set completeopt=longest,menuone
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr> <C-n> pumvisible() ? '<C-n>' : '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
inoremap <expr> <M-,> pumvisible() ? '<C-n>' : '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
 
if has('mouse')
  set mouse=a
endif
 
"au InsertEnter * hi Normal ctermbg=234 guibg=#080008
"au InsertLeave * hi Normal ctermbg=232 guibg=#000000
 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off                  " required
 
" set the runtime path to include Vundle and initialize
set rtp+=~/vimfiles/bundle/Vundle.vim
call vundle#begin('$USERPROFILE/vimfiles/bundle/')
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
 
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'ervandew/supertab'
Plugin 'skywind3000/asyncrun'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
"Plugin 'Valloric/YouCompleteMe'
Plugin 'easymotion/vim-easymotion'
Plugin 'tpope/vim-surround'
"Plugin 'jiangmiao/auto-pairs'
"Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-vividchalk'
Plugin 'vim-scripts/Conque-Shell'
Plugin 'luochen1990/rainbow'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/vimshell.vim'
"Plugin 'mrever/vim-jupyter'
 
call vundle#end()            " required
filetype plugin indent on
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
let g:rainbow_active = 1
colorscheme vividchalk
 
"run shell command in new scratch window
command! -nargs=* -complete=shellcmd R new | setlocal buftype=nofile bufhidden=hide noswapfile | r !<args>
"grep current directory and subdirectories, case insensitive, put output in
"new scratch window
command! -nargs=* -complete=shellcmd G new | setlocal buftype=nofile bufhidden=hide noswapfile | r !grep -irT <args>
"in window generated by above command, open file on line
"nnoremap <c-enter> 0vt<tab>"fy$vT:"sy:e <c-r>f<cr>/<c-r>s<cr> 
nnoremap <c-enter> 0vt<tab>"fyf:/[^ ]<cr>v$h"sy:e <c-r>f<cr>/<c-r>s<cr> 

command! Cd :lcd %:p:h
"command Gcd :py3 mchdir()<cr>:py3 ahk.ahkexec('WinActivate, ahk_class Vim')<cr>
command! Mcd :py3 mchdir()<cr>
inoremap \fp <c-r>=getcwd()<CR>
 
nnoremap <m-up> :cd ..<enter>:pwd<enter>
inoremap <m-up> <esc>:cd ..<enter>:pwd<enter>i
nnoremap <m-left> :cd -<enter>:pwd<enter>
inoremap <m-left> <esc>:cd -<enter>:pwd<enter>i
set wildcharm=<C-z>
nnoremap <m-down> :cd <C-z>
inoremap <m-down> <esc>:cd <C-z>

nnoremap <tab> :bn<cr>
nnoremap <s-tab> :bp<cr>
 
noremap Q gq
 
nnoremap <C-s-Up> :silent! let &guifont = substitute(   &guifont,   ':h\zs\d\+',   '\=eval(submatch(0)+1)',   '')<CR>
nnoremap <C-s-Down> :silent! let &guifont = substitute(   &guifont,   ':h\zs\d\+',   '\=eval(submatch(0)-1)',   '')<CR>
 
nnoremap <C-l> <C-w><C-l>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-j> <C-w><C-j>
nnoremap <c-right> <c-w><c-l>
nnoremap <c-left> <c-w><c-h>
nnoremap <c-down> <c-w><c-j>
nnoremap <c-up> <c-w><c-k>
inoremap <c-right> <esc><c-w><c-l>a
inoremap <c-left> <esc><c-w><c-h>a
inoremap <c-down> <esc><c-w><c-j>a
inoremap <c-up> <esc><c-w><c-k>a
 
inoremap <c-l> <c-x><c-l>
inoremap <c-f> <c-x><c-f>
"nnoremap <c-f> i<c-x><c-f>
 
nnoremap <m-v> 0v$h
nnoremap <F2> {V}
vnoremap <F2> <esc>{V}
"nmap <F2> vi'i"i(i[
"vmap <F2> i'i"i(i[
nnoremap <F3> ggVG
vnoremap <F4> "+y
 
vnoremap \[ xi[]<esc>hp
vnoremap \' xi''<esc>hp
vnoremap \" xi""<esc>hp
vnoremap \< xi<><esc>hp
vnoremap \( xi()<esc>hp
vnoremap \{ xi{}<esc>hp

"""python section
nnoremap <silent> <c-F10> :vsp<enter><c-w><c-l>:enew<enter><c-w><c-h>
nnoremap <silent> <F10> :vsp<enter><c-w><c-l>:e ~/pythonbuff.py<cr>:py3file ~/Vim/vimload.py<cr><c-w><c-h>

nnoremap <silent> <F5> mPggVG"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`P
inoremap <silent> <F5> <esc>mPggVG"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`Pa
vnoremap <silent> <F5> mP<esc>ggVG"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`P

nnoremap <silent> <s-enter> mPV"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`P
inoremap <silent> <s-enter> <esc>mPV"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`Pa
vnoremap <silent> <s-enter> mP"py:py3 mout.output()<cr>:redir @b<cr>:py3 <c-r>p<cr>:redir END<cr>:py3 mout.smartprint(vim.eval("@b"))<cr>`P

nnoremap <silent> <c-b> mPV"py:py3 mout.printexp()<cr>`P
inoremap <silent> <c-b> <esc>mPV"py:py3 mout.printexp()<cr>`Pa
vnoremap <silent> <c-b> mP"py:py3 mout.printexp()<cr>`P

nnoremap <silent> <F8> mP{V}"py:py3 mout.readtable()<cr>`P
vnoremap <silent> <F8> mP"py:py3 mout.readtable()<cr>`P

nnoremap <silent> <F9> V"ry:py3 sendblenderstr()<cr>
inoremap <silent> <F9> <esc>V"ry:py3 sendblenderstr()<cr>a
vnoremap <silent> <F9> "ry:py3 sendblenderstr()<cr>

inoremap <c-u> <C-R>=Pycomplete()<CR>

func! Pycomplete()
    py3 vim.command("call complete(col(\'.\'), " + repr(get_completions()) + ')')
    return ''
endfunc
 
"""end python section 
"nnoremap <F9> >>V"iypV":!fish<enter>G"ipo"<backspace><esc>
"inoremap <F9> <esc>>>V"iypV:!fish<enter>G"ipo<backspace>
 
nnoremap <c-o> 0v$hxi""<esc>hpV:!cmd<enter>u:pwd<enter>
vnoremap <c-o> <esc>0v$hxi""<esc>hpV:!cmd<enter>u:pwd<enter>
inoremap <c-o> <esc>0v$hxi""<esc>hpV:!cmd<enter>u:pwd<enter>
 
 
nnoremap <F11> V"+y:cd <s-insert><backspace>
vnoremap <F11> "+y:cd <s-insert>
inoremap <F11> <esc>V"+y:cd <s-insert><backspace>
 

